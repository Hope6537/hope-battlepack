<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD iBatis Mapper 3.0 //EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hope6537.dao.FeedbackDao">
    <!-- 默认模板生成 添加单行记录 -->
    <insert id="insertFeedback"> INSERT INTO `Feedback`
        (`title`,`des`,`parentId`,`reply`,
        <!--<if test="可以为空字段!=null and 可以为空字段!=''"> `可以为空字段`, </if>-->
        `status`, `isDeleted`, `created`, `updated`)
        VALUES
        (#{title},#{des},#{parentId},#{reply},
        <!--<if test="可以为空字段!=null and 可以为空字段!=''"> #{可以为空字段}, </if>-->
        #{status}, 0, UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
        <selectKey resultType="integer" keyProperty="id">SELECT LAST_INSERT_ID()</selectKey>
    </insert>
    <!-- 默认模板生成 更新单行记录 -->
    <update id="updateFeedback"> UPDATE `Feedback`
        <set>
            <if test="title!=null and title!=''"> `title` = #{title}, </if>
			<if test="des!=null and des!=''"> `des` = #{des}, </if>
			<if test="parentId!=null and parentId!=''"> `parentId` = #{parentId}, </if>
			<if test="reply!=null and reply!=''"> `reply` = #{reply}, </if>
			
            <if test="status!=null and status!=''"> `status` = #{status}, </if>
            updated = UNIX_TIMESTAMP()
        </set>
        <where> id = #{id} </where>
        LIMIT 1
    </update>
    <!-- 默认模板生成 更新多行记录 -->
    <update id="batchUpdateFeedback"> UPDATE `Feedback`
        <set>
            <if test="data.title!=null and data.title!=''"> `title` = #{data.title}, </if>
			<if test="data.des!=null and data.des!=''"> `des` = #{data.des}, </if>
			<if test="data.parentId!=null and data.parentId!=''"> `parentId` = #{data.parentId}, </if>
			<if test="data.reply!=null and data.reply!=''"> `reply` = #{data.reply}, </if>
			
            <if test="data.status!=null and data.status!=''"> `status` = #{data.status}, </if>
        </set>
        <where>
            <foreach collection="idList" item="id" separator=" or ">id = #{id}</foreach>
        </where>
        LIMIT ${idList.size}
    </update>
    <!-- 默认模板生成 删除单行记录-->
    <update id="deleteFeedback"> UPDATE `Feedback` SET isDeleted = 1, updated = UNIX_TIMESTAMP() WHERE id = ${id} LIMIT 1 </update>
    <!-- 默认模板生成 删除多行记录-->
    <update id="batchDeleteFeedback"> UPDATE `Feedback` SET isDeleted = 1,updated = UNIX_TIMESTAMP()
        <where>
            <foreach collection="idList" item="id" separator=" or ">id = #{id}</foreach>
        </where>
        LIMIT ${idList.size}
    </update>
    <!-- 默认模板生成 根据ID选取单行记录 -->
    <select id="selectFeedbackById" resultType="org.hope6537.dataobject.FeedbackDo"> SELECT * FROM `Feedback` WHERE id = ${id} LIMIT 1 </select>
    <!-- 默认模板生成 根据ID集合选取多行记录-->
    <select id="selectFeedbackListByIds" resultType="org.hope6537.dataobject.FeedbackDo"> SELECT * FROM `Feedback`
        <where>
            id in (
            <foreach collection="idList" item="id" separator=" , ">#{id}</foreach>
            )
        </where>
        LIMIT ${idList.size}
    </select>
    <!-- 默认模板生成 动态SQL语句 通常字段判断是否为空 并增加日期范围 -->
    <sql id="where">
        <where> 1 = 1
            <if test="title!=null and title!=''"> AND `title` = #{title} </if>
			<if test="des!=null and des!=''"> AND `des` = #{des} </if>
			<if test="parentId!=null and parentId!=''"> AND `parentId` = #{parentId} </if>
			<if test="reply!=null and reply!=''"> AND `reply` = #{reply} </if>
			
            <!--<if test="模糊查询字段!=null and 模糊查询字段!=''"> AND`模糊查询字段` LIKE concat('%',#{模糊查询字段},'%') </if>-->
            <if test="createdAfter!=null and createdAfter!=''"> AND `created` &lt; #{createdAfter} </if>
            <if test="createdBefore!=null and createdBefore!=''">AND `created` &gt; #{createdBefore} </if>
            <if test="updatedAfter!=null and updatedAfter!=''"> AND `updated` &lt; #{updatedAfter} </if>
            <if test="updatedBefore!=null and updatedBefore!=''">AND `updated` &gt; #{updatedBefore} </if>
            <if test="status!=null and status!=''"> AND `status` = #{status} </if>
            <if test="isDeleted!=null and isDeleted!=''"> AND `isDeleted` = #{isDeleted} </if>
        </where>
    </sql>
    <!-- 默认模板生成 根据Query对象查询记录 -->
    <select id="selectFeedbackListByQuery" resultType="org.hope6537.dataobject.FeedbackDo" parameterType="org.hope6537.dto.FeedbackDto"> SELECT * FROM `Feedback`
        <include refid="where"/>
        ORDER BY `created` DESC
        <if test="limit!=null and limit!=''"> LIMIT
            <if test="offset!=null and offset!=''">#{offset},</if> #{limit} </if>
    </select>
    <!-- 默认模板生成 根据Query对象查询符合条件的个数 -->
    <select id="selectFeedbackCountByQuery" resultType="Integer" parameterType="org.hope6537.dataobject.FeedbackDo"> SELECT count(*) FROM `Feedback`
        <include refid="where"/>
    </select>
</mapper>
    