<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <!-- SessionFactory使用自定义数据源 必须使用自定义的数据源 在这里dataSource定义了之后就没有必要使用Hibernate的配置文件定义了 -->
    <!--<context:property-placeholder location="classpath:config.properties"/>-->

    <!--  <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
            init-method="init" destroy-method="close">
          <property name="url" value="${jdbc_url}"/>
          <property name="username" value="${jdbc_username}"/>
          <property name="password" value="${jdbc_password}"/>
          &lt;!&ndash; 初始化连接大小 &ndash;&gt;
          <property name="initialSize" value="0"/>
          &lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;
          <property name="maxActive" value="20"/>
          &lt;!&ndash; 连接池最大空闲 该参数已弃用 &ndash;&gt;
          &lt;!&ndash; <property name="maxIdle" value="20" /> &ndash;&gt;
          &lt;!&ndash; 连接池最小空闲 &ndash;&gt;
          <property name="minIdle" value="0"/>
          &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;
          <property name="maxWait" value="60000"/>
          <property name="validationQuery" value="${validationQuery}"/>
          <property name="testOnBorrow" value="false"/>
          <property name="testOnReturn" value="false"/>
          <property name="testWhileIdle" value="true"/>
          &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
          <property name="timeBetweenEvictionRunsMillis" value="60000"/>
          &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
          <property name="minEvictableIdleTimeMillis" value="25200000"/>
          &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;
          <property name="removeAbandoned" value="true"/>
          &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;
          <property name="removeAbandonedTimeout" value="1800"/>
          &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
          <property name="logAbandoned" value="true"/>
          &lt;!&ndash; 监控数据库 &ndash;&gt;
          <property name="filters" value="mergeStat"/>
      </bean>
  -->
    <!--  配置hibernate SessionFactory-->
    <!--  <bean id="sessionFactory"
            class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
          <property name="dataSource" ref="dataSource"/>
          <property name="hibernateProperties">
              <props>
                  <prop key="current_session_context_class">thread</prop>
                  <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                  <prop key="hibernate.hbm2ddl.auto">update</prop>
              </props>
          </property>
          <property name="configLocations">
              <list>
                  <value>
                      classpath*:hibernate/hibernate.cfg.xml
                  </value>
              </list>
          </property>
      </bean>
      <bean id="transactionManager"
            class="org.springframework.orm.hibernate4.HibernateTransactionManager">
          <property name="sessionFactory">
              <ref bean="sessionFactory"/>
          </property>
      </bean>-->
    <!--<aop:config>
        <aop:pointcut
                expression="execution(* org.jichuang.hope6537.*.service.impl.*.*(..))"
                id="dao"/>
        <aop:advisor advice-ref="tx" pointcut-ref="dao"/>
    </aop:config>
    &lt;!&ndash; 配置通知 横切面的方法 &ndash;&gt;
    <tx:advice transaction-manager="transactionManager" id="tx">
        <tx:attributes>
            <tx:method name="insert*" read-only="false"/>
            <tx:method name="select*" read-only="false"/>
            <tx:method name="delete*" read-only="false"/>
            <tx:method name="update*" read-only="false"/>
            <tx:method name="do*" read-only="false"/>
        </tx:attributes>
    </tx:advice>-->
</beans>